/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: detector.i

#define SWIGMODULE detector

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#define DLIB_DISABLE_ASSERTS
#define DLIB_NO_GUI_SUPPORT
#define DLIB_JPEG_SUPPORT
#define DLIB_PNG_SUPPORT
#define DLIB_USE_BLAS
#define DLIB_USE_LAPACK
#define DLIB_CHECK_FOR_VERSION_MISMATCH DLIB_VERSION_MISMATCH_CHECK__EXPECTED_VERSION_19_10_0

extern "C" {
  const int USER_ERROR__inconsistent_build_configuration__see_dlib_faq_1_ = 0;
  const int DLIB_CHECK_FOR_VERSION_MISMATCH = 0;
}

#include "/usr/local/include/dlib/geometry/vector.h"
#include "/usr/local/include/dlib/geometry/rectangle.h"
#include "/usr/local/include/dlib/image_processing/full_object_detection.h"

#include "dlib-go.h"

typedef dlib::vector<long,2> point;

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_detector_0cbdac121a63e725(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_detector_0cbdac121a63e725(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_new_rectangle__SWIG_0_detector_0cbdac121a63e725(long long _swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  long arg1 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = (long)_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  
  result = (dlib::rectangle *)new dlib::rectangle(arg1,arg2,arg3,arg4);
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_new_rectangle__SWIG_1_detector_0cbdac121a63e725(long long _swig_go_0, long long _swig_go_1) {
  unsigned long arg1 ;
  unsigned long arg2 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = (unsigned long)_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = (dlib::rectangle *)new dlib::rectangle(arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_new_rectangle__SWIG_2_detector_0cbdac121a63e725(dlib::vector< long,2 > *_swig_go_0) {
  dlib::point *arg1 = 0 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::point **)&_swig_go_0; 
  
  result = (dlib::rectangle *)new dlib::rectangle((dlib::point const &)*arg1);
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_new_rectangle__SWIG_3_detector_0cbdac121a63e725(dlib::vector< long,2 > *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::point *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::point **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = (dlib::rectangle *)new dlib::rectangle((dlib::point const &)*arg1,(dlib::point const &)*arg2);
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_new_rectangle__SWIG_5_detector_0cbdac121a63e725() {
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  
  result = (dlib::rectangle *)new dlib::rectangle();
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


long long _wrap_rectangle_top__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long)((dlib::rectangle const *)arg1)->top();
  _swig_go_result = result; 
  return _swig_go_result;
}


long *_wrap_rectangle_top__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long *result = 0 ;
  long *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long *) &(arg1)->top();
  *(long **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_rectangle_set_top_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long arg2 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  (arg1)->set_top(arg2);
  
}


long long _wrap_rectangle_left__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long)((dlib::rectangle const *)arg1)->left();
  _swig_go_result = result; 
  return _swig_go_result;
}


long *_wrap_rectangle_left__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long *result = 0 ;
  long *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long *) &(arg1)->left();
  *(long **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_rectangle_set_left_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long arg2 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  (arg1)->set_left(arg2);
  
}


long long _wrap_rectangle_right__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long)((dlib::rectangle const *)arg1)->right();
  _swig_go_result = result; 
  return _swig_go_result;
}


long *_wrap_rectangle_right__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long *result = 0 ;
  long *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long *) &(arg1)->right();
  *(long **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_rectangle_set_right_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long arg2 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  (arg1)->set_right(arg2);
  
}


long long _wrap_rectangle_bottom__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long)((dlib::rectangle const *)arg1)->bottom();
  _swig_go_result = result; 
  return _swig_go_result;
}


long *_wrap_rectangle_bottom__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long *result = 0 ;
  long *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (long *) &(arg1)->bottom();
  *(long **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_rectangle_set_bottom_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long arg2 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  (arg1)->set_bottom(arg2);
  
}


dlib::vector< long,2 > *_wrap_rectangle_tl_corner_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = ((dlib::rectangle const *)arg1)->tl_corner();
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_rectangle_bl_corner_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = ((dlib::rectangle const *)arg1)->bl_corner();
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_rectangle_tr_corner_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = ((dlib::rectangle const *)arg1)->tr_corner();
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_rectangle_br_corner_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = ((dlib::rectangle const *)arg1)->br_corner();
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


long long _wrap_rectangle_width_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (unsigned long)((dlib::rectangle const *)arg1)->width();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_rectangle_height_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (unsigned long)((dlib::rectangle const *)arg1)->height();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_rectangle_area_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (unsigned long)((dlib::rectangle const *)arg1)->area();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_rectangle_is_empty_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (bool)((dlib::rectangle const *)arg1)->is_empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_rectangle_intersect_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::rectangle *_swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  dlib::rectangle *arg2 = 0 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::rectangle **)&_swig_go_1; 
  
  result = ((dlib::rectangle const *)arg1)->intersect((dlib::rectangle const &)*arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


bool _wrap_rectangle_contains__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  dlib::point *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = (bool)((dlib::rectangle const *)arg1)->contains((dlib::point const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_rectangle_contains__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  long arg2 ;
  long arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  
  result = (bool)((dlib::rectangle const *)arg1)->contains(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_rectangle_contains__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::rectangle *_swig_go_1) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  dlib::rectangle *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::rectangle **)&_swig_go_1; 
  
  result = (bool)((dlib::rectangle const *)arg1)->contains((dlib::rectangle const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_rectangle_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = (dlib::rectangle *) 0 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_serialize__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, std::ostream *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  dlib::serialize((dlib::rectangle const &)*arg1,*arg2);
  
}


void _wrap_deserialize__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, std::istream *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(std::istream **)&_swig_go_1; 
  
  dlib::deserialize(*arg1,*arg2);
  
}


dlib::rectangle *_wrap_centered_rect__SWIG_0_detector_0cbdac121a63e725(long long _swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  long arg1 ;
  long arg2 ;
  unsigned long arg3 ;
  unsigned long arg4 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = (long)_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (unsigned long)_swig_go_2; 
  arg4 = (unsigned long)_swig_go_3; 
  
  result = dlib::centered_rect(arg1,arg2,arg3,arg4);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_intersect_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::rectangle *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  dlib::rectangle *arg2 = 0 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::rectangle **)&_swig_go_1; 
  
  result = dlib::intersect((dlib::rectangle const &)*arg1,(dlib::rectangle const &)*arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


long long _wrap_area_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (unsigned long)dlib::area((dlib::rectangle const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_center_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = dlib::center((dlib::rectangle const &)*arg1);
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


dlib::vector< double,2 > *_wrap_dcenter_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  SwigValueWrapper< dlib::vector< double,2 > > result;
  dlib::vector< double,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = dlib::dcenter((dlib::rectangle const &)*arg1);
  *(dlib::vector< double,2 > **)&_swig_go_result = new dlib::vector< double,2 >(result); 
  return _swig_go_result;
}


long long _wrap_distance_to_rect_edge_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = (long)dlib::distance_to_rect_edge((dlib::rectangle const &)*arg1,(dlib::vector< long,2 > const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_nearest_point_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  SwigValueWrapper< dlib::vector< long,2 > > result;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = dlib::nearest_point((dlib::rectangle const &)*arg1,(dlib::vector< long,2 > const &)*arg2);
  *(dlib::point **)&_swig_go_result = new dlib::point(result); 
  return _swig_go_result;
}


long long _wrap_nearest_rect_detector_0cbdac121a63e725(std::vector< dlib::rectangle > *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  std::vector< dlib::rectangle > *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(std::vector< dlib::rectangle > **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = dlib::nearest_rect((std::vector< dlib::rectangle > const &)*arg1,(dlib::vector< long,2 > const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_clip_line_to_rectangle_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1, dlib::vector< long,2 > *_swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  dlib::point *arg3 = 0 ;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  arg3 = *(dlib::point **)&_swig_go_2; 
  
  dlib::clip_line_to_rectangle((dlib::rectangle const &)*arg1,*arg2,*arg3);
  
}


dlib::rectangle *_wrap_centered_rect__SWIG_1_detector_0cbdac121a63e725(dlib::vector< long,2 > *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::point *arg1 = 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::point **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  arg3 = (unsigned long)_swig_go_2; 
  
  result = dlib::centered_rect((dlib::vector< long,2 > const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_centered_rect__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  arg3 = (unsigned long)_swig_go_2; 
  
  result = dlib::centered_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_shrink_rect__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  result = dlib::shrink_rect((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_grow_rect__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  
  result = dlib::grow_rect((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_shrink_rect__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  
  result = dlib::shrink_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_grow_rect__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  
  result = dlib::grow_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_translate_rect__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = dlib::translate_rect((dlib::rectangle const &)*arg1,(dlib::vector< long,2 > const &)*arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_translate_rect__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  
  result = dlib::translate_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_resize_rect_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  arg3 = (unsigned long)_swig_go_2; 
  
  result = dlib::resize_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_resize_rect_width_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = dlib::resize_rect_width((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_resize_rect_height_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = dlib::resize_rect_height((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_move_rect__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, dlib::vector< long,2 > *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  dlib::point *arg2 = 0 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(dlib::point **)&_swig_go_1; 
  
  result = dlib::move_rect((dlib::rectangle const &)*arg1,(dlib::vector< long,2 > const &)*arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_move_rect__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  long arg2 ;
  long arg3 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  
  result = dlib::move_rect((dlib::rectangle const &)*arg1,arg2,arg3);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_set_rect_area_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, long long _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  unsigned long arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = dlib::set_rect_area((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::rectangle *_wrap_set_aspect_ratio_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, double _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  double arg2 ;
  dlib::rectangle result;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = dlib::set_aspect_ratio((dlib::rectangle const &)*arg1,arg2);
  *(dlib::rectangle **)&_swig_go_result = new dlib::rectangle(result); 
  return _swig_go_result;
}


dlib::full_object_detection *_wrap_new_full_object_detection__SWIG_0_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, std::vector< dlib::vector< long,2 > > *_swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  std::vector< dlib::point > *arg2 = 0 ;
  dlib::full_object_detection *result = 0 ;
  dlib::full_object_detection *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = *(std::vector< dlib::point > **)&_swig_go_1; 
  
  result = (dlib::full_object_detection *)new dlib::full_object_detection((dlib::rectangle const &)*arg1,(std::vector< dlib::point > const &)*arg2);
  *(dlib::full_object_detection **)&_swig_go_result = (dlib::full_object_detection *)result; 
  return _swig_go_result;
}


dlib::full_object_detection *_wrap_new_full_object_detection__SWIG_1_detector_0cbdac121a63e725() {
  dlib::full_object_detection *result = 0 ;
  dlib::full_object_detection *_swig_go_result;
  
  
  result = (dlib::full_object_detection *)new dlib::full_object_detection();
  *(dlib::full_object_detection **)&_swig_go_result = (dlib::full_object_detection *)result; 
  return _swig_go_result;
}


dlib::full_object_detection *_wrap_new_full_object_detection__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  dlib::full_object_detection *result = 0 ;
  dlib::full_object_detection *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (dlib::full_object_detection *)new dlib::full_object_detection((dlib::rectangle const &)*arg1);
  *(dlib::full_object_detection **)&_swig_go_result = (dlib::full_object_detection *)result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_full_object_detection_get_rect__SWIG_0_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  
  result = (dlib::rectangle *) &((dlib::full_object_detection const *)arg1)->get_rect();
  *(dlib::rectangle **)&_swig_go_result = result; 
  return _swig_go_result;
}


dlib::rectangle *_wrap_full_object_detection_get_rect__SWIG_1_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  
  result = (dlib::rectangle *) &(arg1)->get_rect();
  *(dlib::rectangle **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_full_object_detection_num_parts_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  unsigned long result;
  long long _swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  
  result = (unsigned long)((dlib::full_object_detection const *)arg1)->num_parts();
  _swig_go_result = result; 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_full_object_detection_part__SWIG_0_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0, long long _swig_go_1) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  unsigned long arg2 ;
  dlib::point *result = 0 ;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = (dlib::point *) &((dlib::full_object_detection const *)arg1)->part(arg2);
  *(dlib::point **)&_swig_go_result = result; 
  return _swig_go_result;
}


dlib::vector< long,2 > *_wrap_full_object_detection_part__SWIG_1_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0, long long _swig_go_1) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  unsigned long arg2 ;
  dlib::point *result = 0 ;
  dlib::vector< long,2 > *_swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  arg2 = (unsigned long)_swig_go_1; 
  
  result = (dlib::point *) &(arg1)->part(arg2);
  *(dlib::point **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_full_object_detection_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0) {
  dlib::full_object_detection *arg1 = (dlib::full_object_detection *) 0 ;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_all_parts_in_rect_detector_0cbdac121a63e725(dlib::full_object_detection *_swig_go_0) {
  dlib::full_object_detection *arg1 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::full_object_detection **)&_swig_go_0; 
  
  result = (bool)dlib::all_parts_in_rect((dlib::full_object_detection const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


dlib::mmod_rect *_wrap_new_mmod_rect__SWIG_0_detector_0cbdac121a63e725() {
  dlib::mmod_rect *result = 0 ;
  dlib::mmod_rect *_swig_go_result;
  
  
  result = (dlib::mmod_rect *)new dlib::mmod_rect();
  *(dlib::mmod_rect **)&_swig_go_result = (dlib::mmod_rect *)result; 
  return _swig_go_result;
}


dlib::mmod_rect *_wrap_new_mmod_rect__SWIG_1_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  dlib::mmod_rect *result = 0 ;
  dlib::mmod_rect *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = (dlib::mmod_rect *)new dlib::mmod_rect((dlib::rectangle const &)*arg1);
  *(dlib::mmod_rect **)&_swig_go_result = (dlib::mmod_rect *)result; 
  return _swig_go_result;
}


dlib::mmod_rect *_wrap_new_mmod_rect__SWIG_2_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, double _swig_go_1) {
  dlib::rectangle *arg1 = 0 ;
  double arg2 ;
  dlib::mmod_rect *result = 0 ;
  dlib::mmod_rect *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = (dlib::mmod_rect *)new dlib::mmod_rect((dlib::rectangle const &)*arg1,arg2);
  *(dlib::mmod_rect **)&_swig_go_result = (dlib::mmod_rect *)result; 
  return _swig_go_result;
}


dlib::mmod_rect *_wrap_new_mmod_rect__SWIG_3_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0, double _swig_go_1, std::string *_swig_go_2) {
  dlib::rectangle *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  dlib::mmod_rect *result = 0 ;
  dlib::mmod_rect *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  
  result = (dlib::mmod_rect *)new dlib::mmod_rect((dlib::rectangle const &)*arg1,arg2,(std::string const &)*arg3);
  *(dlib::mmod_rect **)&_swig_go_result = (dlib::mmod_rect *)result; 
  return _swig_go_result;
}


void _wrap_mmod_rect_rect_set_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, dlib::rectangle *_swig_go_1) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  dlib::rectangle *arg2 = (dlib::rectangle *) 0 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  arg2 = *(dlib::rectangle **)&_swig_go_1; 
  
  if (arg1) (arg1)->rect = *arg2;
  
}


dlib::rectangle *_wrap_mmod_rect_rect_get_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  dlib::rectangle *result = 0 ;
  dlib::rectangle *_swig_go_result;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  result = (dlib::rectangle *)& ((arg1)->rect);
  *(dlib::rectangle **)&_swig_go_result = (dlib::rectangle *)result; 
  return _swig_go_result;
}


void _wrap_mmod_rect_detection_confidence_set_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, double _swig_go_1) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  double arg2 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->detection_confidence = arg2;
  
}


double _wrap_mmod_rect_detection_confidence_get_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  result = (double) ((arg1)->detection_confidence);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_mmod_rect_ignore_set_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, bool _swig_go_1) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  bool arg2 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ignore = arg2;
  
}


bool _wrap_mmod_rect_ignore_get_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ignore);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_mmod_rect_label_set_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, std::string *_swig_go_1) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  std::string arg2 ;
  std::string *argp2 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string");
  }
  arg2 = (std::string)*argp2;
  
  
  if (arg1) (arg1)->label = arg2;
  
}


std::string *_wrap_mmod_rect_label_get_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  std::string result;
  std::string *_swig_go_result;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  result =  ((arg1)->label);
  *(std::string **)&_swig_go_result = new std::string(result); 
  return _swig_go_result;
}


void _wrap_delete_mmod_rect_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0) {
  dlib::mmod_rect *arg1 = (dlib::mmod_rect *) 0 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  
  delete arg1;
  
}


dlib::mmod_rect *_wrap_ignored_mmod_rect_detector_0cbdac121a63e725(dlib::rectangle *_swig_go_0) {
  dlib::rectangle *arg1 = 0 ;
  dlib::mmod_rect result;
  dlib::mmod_rect *_swig_go_result;
  
  arg1 = *(dlib::rectangle **)&_swig_go_0; 
  
  result = dlib::ignored_mmod_rect((dlib::rectangle const &)*arg1);
  *(dlib::mmod_rect **)&_swig_go_result = new dlib::mmod_rect(result); 
  return _swig_go_result;
}


void _wrap_serialize__SWIG_3_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, std::ostream *_swig_go_1) {
  dlib::mmod_rect *arg1 = 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  arg2 = *(std::ostream **)&_swig_go_1; 
  
  dlib::serialize((dlib::mmod_rect const &)*arg1,*arg2);
  
}


void _wrap_deserialize__SWIG_3_detector_0cbdac121a63e725(dlib::mmod_rect *_swig_go_0, std::istream *_swig_go_1) {
  dlib::mmod_rect *arg1 = 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = *(dlib::mmod_rect **)&_swig_go_0; 
  arg2 = *(std::istream **)&_swig_go_1; 
  
  dlib::deserialize(*arg1,*arg2);
  
}


dlib::full_object_detection *_wrap_ProcessRect_detector_0cbdac121a63e725(std::string *_swig_go_0, std::string *_swig_go_1, dlib::rectangle *_swig_go_2) {
  std::string arg1 ;
  std::string arg2 ;
  dlib::rectangle arg3 ;
  std::string const *argp1 ;
  std::string const *argp2 ;
  dlib::rectangle const *argp3 ;
  dlib::full_object_detection result;
  dlib::full_object_detection *_swig_go_result;
  
  
  argp1 = (std::string *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string const");
  }
  arg1 = (std::string)*argp1;
  
  
  argp2 = (std::string *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null std::string const");
  }
  arg2 = (std::string)*argp2;
  
  
  argp3 = (dlib::rectangle *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null dlib::rectangle const");
  }
  arg3 = (dlib::rectangle)*argp3;
  
  
  result = dlib::ProcessRect(arg1,arg2,arg3);
  *(dlib::full_object_detection **)&_swig_go_result = new dlib::full_object_detection(result); 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

